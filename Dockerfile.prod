# Dockerfile definitivo para produção - DesejoLivre
FROM php:8.3-fpm AS base

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libpq-dev \
    libzip-dev \
    zip \
    unzip \
    supervisor \
    cron \
    libjpeg-dev \
    libfreetype6-dev \
    libwebp-dev \
    ffmpeg \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    build-essential \
    cmake \
    libopenblas-dev \
    liblapack-dev \
    libx11-dev \
    libgtk-3-dev \
    && rm -rf /var/lib/apt/lists/*

# Configurar e instalar extensões PHP
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp
RUN docker-php-ext-install -j$(nproc) \
    pdo_pgsql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip

# Instalar extensão Redis
RUN pecl install redis && docker-php-ext-enable redis

# Criar ambiente virtual Python
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Atualizar pip, setuptools e wheel, instalar dependências Python
RUN . /opt/venv/bin/activate && \
    pip install --upgrade pip wheel setuptools && \
    pip install --no-cache-dir \
    numpy \
    opencv-python-headless \
    dlib==19.24.0 \
    face-recognition

# Stage de build do Composer
FROM composer:latest AS composer

# Stage final de produção
FROM base AS production

# Criar usuário não-root para segurança
RUN useradd -m -u 1000 -s /bin/bash www-data

# Definir diretório de trabalho
WORKDIR /var/www/html

# Copiar arquivos do Composer
COPY --from=composer /usr/bin/composer /usr/bin/composer

# Copiar arquivos da aplicação
COPY --chown=www-data:www-data . .

# Instalar dependências do Composer (apenas produção)
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-progress

# Otimizar autoloader
RUN composer dump-autoload --optimize --no-dev --classmap-authoritative

# Configurar permissões
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 755 /var/www/html/storage && \
    chmod -R 755 /var/www/html/bootstrap/cache

# Limpar arquivos desnecessários
RUN rm -rf /tmp/* /var/cache/* /var/tmp/*

# Configurar PHP para produção
RUN echo "memory_limit = 512M" > /usr/local/etc/php/conf.d/memory-limit.ini && \
    echo "max_execution_time = 300" > /usr/local/etc/php/conf.d/execution-time.ini && \
    echo "upload_max_filesize = 100M" > /usr/local/etc/php/conf.d/upload-limits.ini && \
    echo "post_max_size = 100M" >> /usr/local/etc/php/conf.d/upload-limits.ini

# Configurar supervisor para produção
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expor porta
EXPOSE 9000

# Comando de inicialização
CMD ["php-fpm"]
