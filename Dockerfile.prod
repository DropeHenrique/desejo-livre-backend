# -----------------------------
# Dockerfile.prod
# -----------------------------

# 1. Base image
FROM python:3.11-slim-bullseye AS base

# 2. Variáveis de ambiente
ENV VENV_PATH=/opt/venv \
    PATH="/opt/venv/bin:$PATH" \
    DEBIAN_FRONTEND=noninteractive

# 3. Instala dependências de sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        cmake \
        git \
        wget \
        curl \
        libglib2.0-0 \
        libsm6 \
        libxrender1 \
        libxext6 \
        libjpeg-dev \
        libpng-dev \
        && apt-get clean && rm -rf /var/lib/apt/lists/*

# 4. Criar virtualenv
RUN python3 -m venv $VENV_PATH

# 5. Atualizar pip, setuptools e wheel
RUN . $VENV_PATH/bin/activate && \
    pip install --upgrade pip wheel setuptools

# 6. Instalar pacotes Python, usando wheels quando possível
RUN . $VENV_PATH/bin/activate && \
    pip install --no-cache-dir --only-binary :all: \
        numpy \
        opencv-python-headless \
        dlib==19.24.0 \
        face-recognition

# 7. Copiar código da aplicação
WORKDIR /app
COPY . /app

# 8. Instalar dependências da aplicação (requirements.txt se houver)
# RUN . $VENV_PATH/bin/activate && pip install --no-cache-dir -r requirements.txt

# 9. Expor porta da aplicação
EXPOSE 8000

# 10. Comando padrão
CMD ["/opt/venv/bin/python", "main.py"]
