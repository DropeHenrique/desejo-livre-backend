FROM php:8.3-fpm

# Set working directory
WORKDIR /var/www

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libpq-dev \
    libzip-dev \
    zip \
    unzip \
    supervisor \
    cron \
    nodejs \
    npm

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_pgsql mbstring exif pcntl bcmath gd zip

# Install Redis extension
RUN pecl install redis && docker-php-ext-enable redis

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install Node.js dependencies globally
RUN npm install -g npm@latest

# Copy composer files first for better caching
COPY composer.json composer.lock ./
RUN composer install --no-scripts --no-autoloader

# Copy package files for frontend dependencies
COPY package.json package-lock.json* ./
RUN npm install

# Copy existing application directory contents
COPY . /var/www

# Generate autoloader and run scripts
RUN composer dump-autoload --optimize

# Create PHP-FPM configuration
RUN mkdir -p /usr/local/etc/php-fpm.d
RUN echo '[www]\n\
user = root\n\
group = root\n\
listen = 9000\n\
listen.owner = root\n\
listen.group = root\n\
pm = dynamic\n\
pm.max_children = 5\n\
pm.start_servers = 2\n\
pm.min_spare_servers = 1\n\
pm.max_spare_servers = 3\n\
' > /usr/local/etc/php-fpm.d/www.conf

# Set proper permissions
RUN chown -R www-data:www-data /var/www

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Start PHP-FPM in background\n\
php-fpm -D\n\
\n\
# Wait a moment for PHP-FPM to start\n\
sleep 2\n\
\n\
# Check if PHP-FPM is running\n\
if pgrep php-fpm > /dev/null; then\n\
    echo "PHP-FPM started successfully"\n\
else\n\
    echo "Failed to start PHP-FPM"\n\
    exit 1\n\
fi\n\
\n\
# Keep container running\n\
tail -f /dev/null\n\
' > /usr/local/bin/start.sh

RUN chmod +x /usr/local/bin/start.sh

# Expose port 9000 and start entrypoint
EXPOSE 9000
CMD ["/usr/local/bin/start.sh"]
